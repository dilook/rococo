server:
  port: 9000

spring:
  application:
    name: rococo-auth
  mvc:
    log-request-details: true
  datasource:
    url: 'jdbc:postgresql://localhost:5432/rococo-auth'
    username: postgres
    password: secret
    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 10000
      max-lifetime: 1000
      auto-commit: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    schemas: public
    locations: classpath:db/migration/rococo-auth
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: false
    generate-ddl: true
    open-in-view: false

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.boot.autoconfigure: DEBUG

---
spring:
  config:
    activate:
      on-profile: 'local'
  kafka:
    bootstrap-servers: 'localhost:9092'
  datasource:
    url: 'jdbc:postgresql://localhost:5432/rococo-auth'
    username: postgres
    password: secret
rococo-front:
  base-uri: 'http://127.0.0.1:3000'
rococo-auth:
  base-uri: 'http://127.0.0.1:9000'
oauth2:
  client-id: 'client'
